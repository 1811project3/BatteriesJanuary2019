(CREATING TRAINEE_NOTE AND BATCH NOTE);


(TRAINEE_NOTE)
CREATE TABLE CALIBER.CALIBER_TRAINEE_NOTE
(
 NOTE_ID BIGINT,        
 NOTE_CONTENT STRING,   
 MAX_VISIBILITY DOUBLE,
 IS_QC_FEEDBACK TINYINT, -- DOUBLE TO TINYINT: REPRESENT A BOOLEAN
 QC_STATUS STRING,
 NOTE_TYPE STRING,
 WEEK_NUMBER DOUBLE,
 BATCH_ID BIGINT,   -- DOUBLE TO BIGINT: CONVERSION
 TRAINEE_ID BIGINT  -- DOUBLE TO BIGINT: CONVERSION
);


--DATA MIGRATING CALIBER1 to Caliber 2: create trainee note out of note
INSERT INTO TABLE CALIBER.caliber_trainee_note
SELECT * FROM CALIBER.CALIBER_NOTE
WHERE NOTE_TYPE = 'TRAINEE' OR NOTE_TYPE= 'QC_TRAINEE';


SELECT COUNT(*) FROM CALIBER_TRAINEE_NOTE; -- 618
SELECT * FROM caliber_trainee_note;




(BATCH_NOTE)
CREATE TABLE CALIBER.CALIBER_BATCH_NOTE
(
 NOTE_ID BIGINT,        
 NOTE_CONTENT STRING,   
 MAX_VISIBILITY DOUBLE,
 IS_QC_FEEDBACK TINYINT, -- DOUBLE TO TINYINT: REPRESENT A BOOLEAN
 QC_STATUS STRING,
 NOTE_TYPE STRING,
 WEEK_NUMBER DOUBLE,
 BATCH_ID BIGINT,   -- DOUBLE TO BIGINT: CONVERSION
 TRAINEE_ID BIGINT  -- DOUBLE TO BIGINT: CONVERSION
);


INSERT INTO TABLE CALIBER.caliber_BATCH_note
SELECT * FROM CALIBER.CALIBER_NOTE
WHERE NOTE_TYPE = 'BATCH' OR NOTE_TYPE= 'QC_BATCH';


SELECT * FROM CALIBER_BATCH_NOTE;


SELECT COUNT(*) FROM caliber_batch_note; --5




------------------------------------------------------------------------------------
(OLD CALIBER_NOTE - PLEASE IGNORE)
CREATE TABLE CALIBER_NOTE
(NOTE_ID INT,
NOTE_CONTENT STRING,
MAX_VISIBILITY INT,
IS_QC_FEEDBACK INT,
QC_STATUS STRING,
NOTE_TYPE STRING,
WEEK_NUMBER INT,
BATCH_ID INT,
TRAINEE_ID INT)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.RegexSerDe'
WITH SERDEPROPERTIES (
-- "input.regex" = '[^a-zA-Z0-9\u00E0-\u00FC ]+');
"input.regex" = '[^a-zA-Z0-9\u00E0-\u00FC \u00B6 ]+');


load data inpath "/user/cloudera/CALIBER.CALIBER_NOTE/part-m-00000" INTO TABLE CALIBER_NOTE;


SELECT COUNT(*) FROM caliber_note; --631;
SELECT * FROM CALIBER_NOTE;
----------------------------------------------------------------------------------------




// MOST UPDATED VERSION








(CALIBER.CALIBER_NOTE)
USE CALIBER;


DROP TABLE CALIBER.CALIBER_NOTE;


CREATE TABLE CALIBER.CALIBER_NOTE
(NOTE_ID INT,
NOTE_CONTENT STRING,
MAX_VISIBILITY INT,
IS_QC_FEEDBACK INT,
QC_STATUS STRING,
NOTE_TYPE STRING,
WEEK_NUMBER INT,
BATCH_ID INT,
TRAINEE_ID INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "~";


DESCRIBE CALIBER.CALIBER_NOTE;


LOAD DATA
INPATH "/user/cloudera/CALIBER/CALIBER_NOTE/part-m-00000" 
INTO TABLE CALIBER_NOTE;


SELECT COUNT(*) FROM CALIBER.CALIBER_NOTE;


select * FROM CALIBER.caliber_note;


select * FROM CALIBER.caliber_note where note_id = 6407;
select * FROM caliber_note where note_id = 6308;


-- SHOULD GIVE 0 RESULTS
SELECT * FROM CALIBER.caliber_note 
WHERE NOTE_TYPE != 'TRAINEE' 
AND NOTE_TYPE !='QC_TRAINEE' 
AND NOTE_TYPE!='BATCH' 
AND NOTE_TYPE != 'QC_BATCH';




(CALIBER.CALIBER_GRADE)
USE CALIBER;


CREATE TABLE CALIBER.CALIBER_GRADE
(GRADE_ID INT, 
 DATE_RECIEVED TIMESTAMP,
 SCORE INT,
 ASSESSMENT_ID INT,
 TRAINEE_ID INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "~";


LOAD DATA
INPATH "/user/cloudera/CALIBER/CALIBER_GRADE/part-m-00000" 
INTO TABLE CALIBER_GRADE;


SELECT COUNT(*) FROM CALIBER.CALIBER_GRADE;


SELECT * FROM CALIBER.CALIBER_GRADE;




(CALIBER.CALIBER_TRAINER)
USE CALIBER;


DROP TABLE CALIBER.CALIBER_TRAINER;


CREATE TABLE CALIBER.CALIBER_TRAINER
(TRAINER_ID INT,
 EMAIL STRING,
 NAME STRING,
 TIER STRING,
 TITLE STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "~";


DESCRIBE CALIBER.CALIBER_TRAINER;


LOAD DATA
INPATH "/user/cloudera/CALIBER/CALIBER_TRAINER/part-m-00000" 
INTO TABLE CALIBER_TRAINER;


SELECT COUNT(*) FROM CALIBER.CALIBER_TRAINER;


(CALIBER.CALIBER_ADDRESS)
USE CALIBER;


CREATE TABLE CALIBER.CALIBER_ADDRESS
(ADDRESS_ID INT,
ADDRESS_STREET STRING,
ADDRESS_CITY STRING,
ADDRESS_STATE STRING,
ADDRESS_ZIPCODE STRING,
ADDRESS_COMPANY STRING,
ACTIVE INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY "~";


LOAD DATA
INPATH "/user/cloudera/CALIBER/CALIBER_ADDRESS/part-m-00000" 
INTO TABLE CALIBER_ADDRESS;


SELECT COUNT(*) FROM CALIBER.CALIBER_ADDRESS;


SELECT * FROM CALIBER.CALIBER_ADDRESS;