USE BIFORCE_STAGING;

INSERT OVERWRITE TABLE TRAINEE_DIM
SELECT TRAINEE_ID, BATCH_ID, TRAINEE_EMAIL, TRAINEE_NAME, TRAINING_STATUS, PHONE_NUMBER, PROFILE_URL, SKYPE_ID, RESOURCE_ID, FLAG_NOTES, FLAG_STATUS, TECH_SCREEN_SCORE, RECRUITER_NAME, COLLEGE, DEGREE, MAJOR, TECH_SCREENER_NAME, REVPRO_PROJECT_COMPLETION
FROM CALIBER_TRAINEE;

INSERT OVERWRITE TABLE BATCH_DIM
SELECT BATCH_ID, TRAINER_ID, ADDRESS_ID, BORDERLINE_GRADE_THRESHOLD, END_DATE, GOOD_GRADE_THRESHOLD, LOCATION, SKILL_TYPE, START_DATE, TRAINING_NAME, TRAINING_TYPE, NUMBER_OF_WEEKS, CO_TRAINER_ID, RESOURCE_ID, GRADED_WEEKS
FROM CALIBER_BATCH;

INSERT OVERWRITE TABLE NOTE_DIM
SELECT NOTE_ID, NOTE_CONTENT, MAX_VISIBILITY, IS_QC_FEEDBACK, QC_STATUS, NOTE_TYPE, WEEK_NUMBER
FROM CALIBER_NOTE;

INSERT OVERWRITE TABLE NOTE_FACT
SELECT NOTE_ID, BATCH_ID, TRAINEE_ID
FROM CALIBER_NOTE;

INSERT OVERWRITE TABLE GRADE_FACT
SELECT GRADE_ID, DATE_RECEIVED, ASSESSMENT_ID, TRAINEE_ID, SCORE
FROM CALIBER_GRADE;

INSERT OVERWRITE TABLE ASSESSMENT_DIM
SELECT ASSESSMENT_ID, BATCH_ID, ASSESSMENT_CATEGORY, RAW_SCORE, ASSESSMENT_TITLE, ASSESSMENT_TYPE, WEEK_NUMBER
FROM CALIBER_ASSESSMENT;

INSERT OVERWRITE TABLE CATEGORY_DIM
SELECT CATEGORY_ID, SKILL_CATEGORY, IS_ACTIVE
FROM CALIBER_CATEGORY;

INSERT OVERWRITE TABLE TRAINER_DIM
SELECT TRAINER_ID, EMAIL, NAME, TIER, TITLE
FROM CALIBER_TRAINER;

INSERT OVERWRITE TABLE ADDRESS_DIM
SELECT ADDRESS_ID, ADDRESS_STREET, ADDRESS_CITY, ADDRESS_STATE, ADDRESS_ZIPCODE, ADDRESS_COMPANY, ACTIVE
FROM CALIBER_ADDRESS;

INSERT OVERWRITE TABLE SPARK_DATA
SELECT ROW_NUMBER() OVER (), Q.* FROM
(SELECT
	CASE
		WHEN UPPER(CALIBER_ASSESSMENT.ASSESSMENT_TYPE) = 'VERBAL' THEN 1
		WHEN UPPER(CALIBER_ASSESSMENT.ASSESSMENT_TYPE) = 'EXAM' THEN 2
		WHEN UPPER(CALIBER_ASSESSMENT.ASSESSMENT_TYPE) = 'PROJECT' THEN 3
		WHEN UPPER(CALIBER_ASSESSMENT.ASSESSMENT_TYPE) = 'OTHER' THEN 4
		ELSE 0 END AS TYPE,
    CALIBER_ASSESSMENT.RAW_SCORE,
    CALIBER_GRADE.SCORE,
    CALIBER_ASSESSMENT.WEEK_NUMBER,
    CALIBER_ASSESSMENT.ASSESSMENT_CATEGORY,
    CALIBER_BATCH.TRAINER_ID,
    CALIBER_BATCH.BATCH_ID,
    CALIBER_BATCH.SKILL_TYPE,
    CALIBER_GRADE.TRAINEE_ID,
	CASE
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'DROPPED' THEN 0
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'EMPLOYED' THEN 1
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'TRAINING' THEN 2
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'SIGNED' THEN 3
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'CONFIRMED' THEN 4
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'MARKETING' THEN 5
		ELSE 6 END AS TRAINING_STATUS
FROM CALIBER_ASSESSMENT, CALIBER_BATCH, CALIBER_GRADE, CALIBER_TRAINEE
WHERE CALIBER_ASSESSMENT.ASSESSMENT_ID = CALIBER_GRADE.ASSESSMENT_ID
AND CALIBER_ASSESSMENT.BATCH_ID = CALIBER_BATCH.BATCH_ID
AND CALIBER_GRADE.TRAINEE_ID = CALIBER_TRAINEE.TRAINEE_ID

UNION ALL

SELECT
	CASE 
		WHEN UPPER(CALIBER_NOTE.NOTE_TYPE) = 'TRAINEE' THEN 5 
		WHEN UPPER(CALIBER_NOTE.NOTE_TYPE) = 'QC_TRAINEE' THEN 6
		WHEN UPPER(CALIBER_NOTE.NOTE_TYPE) = 'BATCH' THEN 7
		WHEN UPPER(CALIBER_NOTE.NOTE_TYPE) = 'QC_BATCH' THEN 8
		ELSE 0 END AS TYPE,
    100,
    CASE
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'POOR' THEN 65 
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'AVERAGE' THEN 75
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'GOOD' THEN 85
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'SUPERSTAR' THEN 95
        ELSE 0 END AS SCORE,
    CALIBER_NOTE.WEEK_NUMBER,
    0,
    CALIBER_BATCH.TRAINER_ID,
    CALIBER_BATCH.BATCH_ID,
    CALIBER_BATCH.SKILL_TYPE,
    CALIBER_TRAINEE.TRAINEE_ID,
	CASE
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'DROPPED' THEN 0
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'EMPLOYED' THEN 1
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'TRAINING' THEN 2
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'SIGNED' THEN 3
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'CONFIRMED' THEN 4
		WHEN UPPER(CALIBER_TRAINEE.TRAINING_STATUS) = 'MARKETING' THEN 5
		ELSE 6 END AS TRAINING_STATUS
FROM CALIBER_NOTE, CALIBER_BATCH, CALIBER_TRAINEE
WHERE CALIBER_NOTE.TRAINEE_ID = CALIBER_TRAINEE.TRAINEE_ID
AND CALIBER_BATCH.BATCH_ID = CALIBER_TRAINEE.BATCH_ID
AND CALIBER_NOTE.QC_STATUS IS NOT NULL) Q;

insert overwrite directory 'user/hadoop/biforce/Spark_Data' row format delimited fields terminated by ',' select * from spark_data;