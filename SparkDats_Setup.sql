CREATE DATABASE IF NOT EXISTS BIFORCE_SPARK;

use BIFORCE_SPARK;

CREATE TABLE SPARK_DATA (TEST_TYPE String, SCORE DECIMAL(5, 2), TEST_PERIOD INT, BUILDER_ID INT, GROUP_ID INT, GROUP_TYPE String, BATTERY_ID INT, BATTERY_STATUS String);

INSERT OVERWRITE TABLE SPARK_DATA 
SELECT
    CALIBER_ASSESSMENT.ASSESSMENT_TYPE as ASSESSMENT,
    CALIBER_GRADE.SCORE,
    CALIBER_ASSESSMENT.WEEK_NUMBER,
    CALIBER_BATCH.TRAINER_ID,
    CALIBER_BATCH.BATCH_ID,
    CALIBER_BATCH.SKILL_TYPE, 
    CALIBER_GRADE.TRAINEE_ID,
    CALIBER_TRAINEE.TRAINING_STATUS
FROM CALIBER_ASSESSMENT, CALIBER_BATCH, CALIBER_GRADE, CALIBER_TRAINEE
WHERE CALIBER_ASSESSMENT.ASSESSMENT_ID = CALIBER_GRADE.ASSESSMENT_ID
AND CALIBER_ASSESSMENT.BATCH_ID = CALIBER_BATCH.BATCH_ID
AND CALIBER_GRADE.TRAINEE_ID = CALIBER_TRAINEE.TRAINEE_ID

UNION ALL

SELECT
    CALIBER_NOTE.NOTE_TYPE AS ASSESSMENT,
    CASE
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'POOR' THEN 65 
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'AVERAGE' THEN 75
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'GOOD' THEN 85
        WHEN UPPER(CALIBER_NOTE.QC_STATUS) = 'SUPERSTAR' THEN 95
        ELSE 0 END as SCORE,
    CALIBER_NOTE.WEEK_NUMBER,
    CALIBER_BATCH.TRAINER_ID,
    CALIBER_BATCH.BATCH_ID,
    CALIBER_BATCH.SKILL_TYPE,
    CALIBER_TRAINEE.TRAINEE_ID,
    CALIBER_TRAINEE.TRAINING_STATUS
FROM CALIBER_NOTE, CALIBER_BATCH, CALIBER_TRAINEE
WHERE CALIBER_NOTE.TRAINEE_ID = CALIBER_TRAINEE.TRAINEE_ID
AND CALIBER_BATCH.BATCH_ID = CALIBER_TRAINEE.BATCH_ID
AND CALIBER_NOTE.QC_STATUS IS NOT NULL;